input UserInput {
    firstName: String!
    lastName: String!
    email: String!
}

type UserEntry {
    id: String!
    firstName: String!
    lastName: String!
    email: String!
    organizationId: Long!
}

type UserQuery {
    currentUser: UserEntry
    read(id: String!): UserEntry
}

type UserMutation {
    create(organizationId: Long!, userInput: UserInput!): UserEntry!
    update(userInput: UserInput!): UserEntry!
    makePayment(userId: String!, paymentInput: PaymentInput!): PaymentEntry!
}

input PaymentInput {
    type: String!
    amount: Int!
    cardId: Long
}

type PaymentEntry {
    id: Long!
    amount: Int!
    cardId: Long
    user: UserEntry!
}